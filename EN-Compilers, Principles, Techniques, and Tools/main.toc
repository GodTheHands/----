\babel@toc {english}{}\relax 
\contentsline {chapter}{Contents\ttl@gmk {\@mkboth {\MakeUppercase []{Contents}}{\MakeUppercase []{Contents}}}}{0}{chapter*.1}%
\contentsline {chapter}{\numberline {1}Introduction}{1}{chapter.0.1}%
\contentsline {section}{\numberline {1}Language Processors}{1}{section.0.1.1}%
\contentsline {section}{\numberline {2}The Structure of a Compiler}{1}{section.0.1.2}%
\contentsline {subsection}{\numberline {2.1}Lexical Analysis}{2}{subsection.0.1.2.1}%
\contentsline {subsection}{\numberline {2.2}Syntax Analysis}{2}{subsection.0.1.2.2}%
\contentsline {subsection}{\numberline {2.3}Semantic Analysis}{2}{subsection.0.1.2.3}%
\contentsline {subsection}{\numberline {2.4}Intermediate Code Generation}{2}{subsection.0.1.2.4}%
\contentsline {subsection}{\numberline {2.5}The Grouping of Phases into Passes}{2}{subsection.0.1.2.5}%
\contentsline {subsection}{\numberline {2.6}Compiler-Construction Tools}{2}{subsection.0.1.2.6}%
\contentsline {section}{\numberline {3}The Evolution of Programming Language}{3}{section.0.1.3}%
\contentsline {subsection}{\numberline {3.1}The Move to Higher-Level Languages}{3}{subsection.0.1.3.1}%
\contentsline {section}{\numberline {4}Applications of Compiler Technology}{3}{section.0.1.4}%
\contentsline {subsection}{\numberline {4.1}implementation of High-Level Programming Languages}{3}{subsection.0.1.4.1}%
\contentsline {subsection}{\numberline {4.2}Optimizations for Computer Architectures}{3}{subsection.0.1.4.2}%
\contentsline {section}{\numberline {5}Programming Language Basics}{4}{section.0.1.5}%
\contentsline {subsection}{\numberline {5.1}The Static/Dynamic Distinction}{4}{subsection.0.1.5.1}%
\contentsline {subsection}{\numberline {5.2}Environments and States}{4}{subsection.0.1.5.2}%
\contentsline {subsection}{\numberline {5.3}Static Scope and Block Structure}{5}{subsection.0.1.5.3}%
\contentsline {subsection}{\numberline {5.4}Explicit Access Control}{5}{subsection.0.1.5.4}%
\contentsline {subsection}{\numberline {5.5}Dynamic Scope}{5}{subsection.0.1.5.5}%
\contentsline {subsection}{\numberline {5.6}Parameter Passing Mechanisms}{5}{subsection.0.1.5.6}%
\contentsline {subsubsection}{Call-by-Value}{5}{subsection.0.1.5.6}%
\contentsline {subsubsection}{Call-by-Reference}{6}{subsection.0.1.5.6}%
\contentsline {subsection}{\numberline {5.7}Aliasing}{6}{subsection.0.1.5.7}%
\contentsline {chapter}{\numberline {2}A Simple Syntax-Directed Translator}{7}{chapter.0.2}%
\contentsline {section}{\numberline {1}Introduction}{7}{section.0.2.1}%
\contentsline {section}{\numberline {2}Syntax Definition}{7}{section.0.2.2}%
\contentsline {subsection}{\numberline {2.1}Definition of Grammars}{8}{subsection.0.2.2.1}%
\contentsline {subsection}{\numberline {2.2}Derivations}{8}{subsection.0.2.2.2}%
\contentsline {subsection}{\numberline {2.3}Parse Trees}{8}{subsection.0.2.2.3}%
\contentsline {subsection}{\numberline {2.4}Ambiguity}{9}{subsection.0.2.2.4}%
\contentsline {subsection}{\numberline {2.5}Associativity of Operators}{9}{subsection.0.2.2.5}%
\contentsline {subsection}{\numberline {2.6}Precedence of Operators}{9}{subsection.0.2.2.6}%
\contentsline {section}{\numberline {3}Syntax-Directed Translation}{10}{section.0.2.3}%
\contentsline {subsection}{\numberline {3.1}Postfix Notation}{10}{subsection.0.2.3.1}%
\contentsline {subsection}{\numberline {3.2}Synthesized Attributes}{10}{subsection.0.2.3.2}%
\contentsline {subsection}{\numberline {3.3}Tree Traversals}{10}{subsection.0.2.3.3}%
\contentsline {subsection}{\numberline {3.4}Translation Schemes}{10}{subsection.0.2.3.4}%
\contentsline {section}{\numberline {4}Parsing}{11}{section.0.2.4}%
\contentsline {subsection}{\numberline {4.1}Top-Down Parsing}{11}{subsection.0.2.4.1}%
\contentsline {subsection}{\numberline {4.2}Predictive Parsing}{11}{subsection.0.2.4.2}%
\contentsline {subsection}{\numberline {4.3}Designing a Predictive Parser}{11}{subsection.0.2.4.3}%
\contentsline {subsection}{\numberline {4.4}Left Recursion}{11}{subsection.0.2.4.4}%
\contentsline {section}{\numberline {5}A Translator for Simple Expressions}{12}{section.0.2.5}%
\contentsline {subsection}{\numberline {5.1}Abstract and Concrete Syntax}{12}{subsection.0.2.5.1}%
\contentsline {subsection}{\numberline {5.2}Simplifying the Translator}{12}{subsection.0.2.5.2}%
\contentsline {subsection}{\numberline {5.3}The Complete Program}{12}{subsection.0.2.5.3}%
\contentsline {section}{\numberline {6}Lexical Analysis}{13}{section.0.2.6}%
\contentsline {subsection}{\numberline {6.1}Recognizing Keywords and Identifiers}{13}{subsection.0.2.6.1}%
\contentsline {section}{\numberline {7}Symbol Tables}{14}{section.0.2.7}%
\contentsline {subsection}{\numberline {7.1}Symbol Table Per Scope}{14}{subsection.0.2.7.1}%
\contentsline {section}{\numberline {8}Intermediate Code Generation}{14}{section.0.2.8}%
\contentsline {subsection}{\numberline {8.1}Two Kinds of Intermediate Representations}{14}{subsection.0.2.8.1}%
\contentsline {subsection}{\numberline {8.2}Static Checking}{14}{subsection.0.2.8.2}%
\contentsline {subsubsection}{L-values and R-values}{14}{subsection.0.2.8.2}%
\contentsline {subsubsection}{Type Checking}{14}{subsection.0.2.8.2}%
\contentsline {chapter}{\numberline {3}Lexical Analysis}{15}{chapter.0.3}%
\contentsline {section}{\numberline {1}The Role of the Lexical Analyzer}{15}{section.0.3.1}%
\contentsline {subsection}{\numberline {1.1}Tokens, Patterns, and Lexemes}{15}{subsection.0.3.1.1}%
\contentsline {section}{\numberline {2}Specification of Tokens}{16}{section.0.3.2}%
\contentsline {subsection}{\numberline {2.1}Strings and Languages}{16}{subsection.0.3.2.1}%
\contentsline {subsection}{\numberline {2.2}Operations and Languages}{16}{subsection.0.3.2.2}%
\contentsline {subsection}{\numberline {2.3}Regular Expressions}{17}{subsection.0.3.2.3}%
\contentsline {subsection}{\numberline {2.4}Regular Definitions}{17}{subsection.0.3.2.4}%
\contentsline {subsection}{\numberline {2.5}Extensions of Regular Expressions}{17}{subsection.0.3.2.5}%
\contentsline {section}{\numberline {3}Recognition of Tokens}{17}{section.0.3.3}%
\contentsline {subsection}{\numberline {3.1}Transition Diagrams}{17}{subsection.0.3.3.1}%
\contentsline {subsection}{\numberline {3.2}Recognition of Reserved Words and Identifiers}{17}{subsection.0.3.3.2}%
\contentsline {section}{\numberline {4}The Lexical-Analyzer Generator \texttt {Lex}}{18}{section.0.3.4}%
\contentsline {subsection}{\numberline {4.1}Structure of \texttt {Lex} Programs}{18}{subsection.0.3.4.1}%
\contentsline {section}{\numberline {5}Finite Automata}{18}{section.0.3.5}%
\contentsline {subsection}{\numberline {5.1}Nondeterministic Finite Automata}{18}{subsection.0.3.5.1}%
\contentsline {subsection}{\numberline {5.2}Transition Tables}{19}{subsection.0.3.5.2}%
\contentsline {subsection}{\numberline {5.3}Acceptance of Input Strings by Automata}{19}{subsection.0.3.5.3}%
\contentsline {subsection}{\numberline {5.4}Deterministic Finite Automata}{19}{subsection.0.3.5.4}%
\contentsline {section}{\numberline {6}From Regular Expressions to Automata}{20}{section.0.3.6}%
\contentsline {subsection}{\numberline {6.1}Conversion of an NFA to a DFA}{20}{subsection.0.3.6.1}%
\contentsline {subsection}{\numberline {6.2}Simulation of an NFA}{21}{subsection.0.3.6.2}%
\contentsline {subsection}{\numberline {6.3}Efficiency of NFA Simulation}{22}{subsection.0.3.6.3}%
\contentsline {subsection}{\numberline {6.4}Construction of an NFA from a Regular Expression}{22}{subsection.0.3.6.4}%
\contentsline {section}{\numberline {7}Design of a Lexical-Analyzer Generator}{24}{section.0.3.7}%
\contentsline {subsection}{\numberline {7.1}DFA's for Lexical Analyzers}{24}{subsection.0.3.7.1}%
\contentsline {section}{\numberline {8}Optimization of DFA-Based Pattern Matchers}{24}{section.0.3.8}%
\contentsline {subsection}{\numberline {8.1}Important States of an NFA}{24}{subsection.0.3.8.1}%
\contentsline {subsection}{\numberline {8.2}Converting a Regular Expression Directly to a DFA}{24}{subsection.0.3.8.2}%
\contentsline {subsection}{\numberline {8.3}Minimizing the Number of States of a DFA}{25}{subsection.0.3.8.3}%
\contentsline {chapter}{\numberline {4}Syntax Analysis}{27}{chapter.0.4}%
\contentsline {section}{\numberline {1}Introduction}{27}{section.0.4.1}%
\contentsline {subsection}{\numberline {1.1}Representative Grammars}{27}{subsection.0.4.1.1}%
\contentsline {subsection}{\numberline {1.2}Syntax Error Handling}{27}{subsection.0.4.1.2}%
\contentsline {subsection}{\numberline {1.3}Error-Recovery Strategies}{28}{subsection.0.4.1.3}%
\contentsline {subsubsection}{Panic-Mode Recovery}{28}{subsection.0.4.1.3}%
\contentsline {section}{\numberline {2}Context-Free Grammars}{28}{section.0.4.2}%
\contentsline {subsection}{\numberline {2.1}The Formal Definition of a Context-Free Grammar}{28}{subsection.0.4.2.1}%
\contentsline {subsection}{\numberline {2.2}Derivations}{28}{subsection.0.4.2.2}%
\contentsline {subsection}{\numberline {2.3}Parse Trees and Derivations}{29}{subsection.0.4.2.3}%
\contentsline {subsection}{\numberline {2.4}Ambiguity}{29}{subsection.0.4.2.4}%
\contentsline {section}{\numberline {3}Writing a Grammar}{29}{section.0.4.3}%
\contentsline {subsection}{\numberline {3.1}Elimination of Left Recursion}{29}{subsection.0.4.3.1}%
\contentsline {subsection}{\numberline {3.2}Left Factoring}{30}{subsection.0.4.3.2}%
\contentsline {subsection}{\numberline {3.3}LL(1) Grammars}{30}{subsection.0.4.3.3}%
\contentsline {subsection}{\numberline {3.4}Nonrecursive Predictive Parsing}{30}{subsection.0.4.3.4}%
\contentsline {section}{\numberline {4}Bottom-Up Parsing}{31}{section.0.4.4}%
\contentsline {subsection}{\numberline {4.1}Reductions}{31}{subsection.0.4.4.1}%
\contentsline {subsection}{\numberline {4.2}Shift-Reduce Parsing}{31}{subsection.0.4.4.2}%
\contentsline {subsection}{\numberline {4.3}Conflicts During Shift-Reduce Parsing}{32}{subsection.0.4.4.3}%
\contentsline {section}{\numberline {5}Introduction to LR Parsing: Simple LR}{32}{section.0.4.5}%
\contentsline {subsection}{\numberline {5.1}Items and the LR(0) Automaton}{32}{subsection.0.4.5.1}%
\contentsline {subsubsection}{Closure of Item Sets}{32}{subsection.0.4.5.1}%
\contentsline {subsection}{\numberline {5.2}The LR-Parsing Algortihm}{32}{subsection.0.4.5.2}%
\contentsline {subsubsection}{LR-Parser Configurations}{32}{subsection.0.4.5.2}%
\contentsline {subsubsection}{Behavior of the LR Parser}{32}{subsection.0.4.5.2}%
\contentsline {subsection}{\numberline {5.3}Constructing SLR-Parsing Tables}{33}{subsection.0.4.5.3}%
\contentsline {subsection}{\numberline {5.4}Viable Prefixes}{34}{subsection.0.4.5.4}%
\contentsline {section}{\numberline {6}More Powerful LR Parsers}{34}{section.0.4.6}%
\contentsline {subsection}{\numberline {6.1}Canonical LR(1) Items}{34}{subsection.0.4.6.1}%
\contentsline {subsection}{\numberline {6.2}Constructing LR(1) Sets of Items}{34}{subsection.0.4.6.2}%
\contentsline {subsection}{\numberline {6.3}Canonical LR(1) Parsing Tables}{35}{subsection.0.4.6.3}%
\contentsline {subsection}{\numberline {6.4}Constructing LALR Parsing Tables}{36}{subsection.0.4.6.4}%
\contentsline {subsection}{\numberline {6.5}Efficient Construction of LALR Parsing Tables}{36}{subsection.0.4.6.5}%
\contentsline {section}{\numberline {7}Using Ambiguous Grammars}{38}{section.0.4.7}%
\contentsline {subsection}{\numberline {7.1}Precedence and Associativity to Resolve Conflicts}{38}{subsection.0.4.7.1}%
\contentsline {chapter}{\numberline {5}Syntax-Directed Translation}{39}{chapter.0.5}%
\contentsline {section}{\numberline {1}Syntax-Directed Definitions}{39}{section.0.5.1}%
\contentsline {subsection}{\numberline {1.1}Inherited and Synthesized Attributes}{39}{subsection.0.5.1.1}%
\contentsline {subsection}{\numberline {1.2}Evaluating an SDD at the Nodes of a Parse Tree}{39}{subsection.0.5.1.2}%
\contentsline {section}{\numberline {2}Evaluation Orders for SDD's}{39}{section.0.5.2}%
\contentsline {subsection}{\numberline {2.1}Dependency Graphs}{39}{subsection.0.5.2.1}%
\contentsline {subsection}{\numberline {2.2}Ordering the Evaluation of Attributes}{40}{subsection.0.5.2.2}%
\contentsline {subsection}{\numberline {2.3}S-Attributed Definitions}{40}{subsection.0.5.2.3}%
\contentsline {subsection}{\numberline {2.4}L-attributed Definitions}{40}{subsection.0.5.2.4}%
\contentsline {section}{\numberline {3}Syntax-Directed Translation Schemes}{40}{section.0.5.3}%
\contentsline {subsection}{\numberline {3.1}Postfix Translation Schemes}{40}{subsection.0.5.3.1}%
\contentsline {section}{\numberline {4}Implementing L-Attributed SDD's}{40}{section.0.5.4}%
\contentsline {subsection}{\numberline {4.1}On-The-Fly Code Generation}{41}{subsection.0.5.4.1}%
\contentsline {subsection}{\numberline {4.2}L-Attributed SDD's and LL Parsing}{41}{subsection.0.5.4.2}%
\contentsline {chapter}{\numberline {6}Intermediate-Code Generation}{42}{chapter.0.6}%
\contentsline {section}{\numberline {1}Variants of Syntax Trees}{42}{section.0.6.1}%
\contentsline {subsection}{\numberline {1.1}The Value-Number Method for Constructing DAG's}{42}{subsection.0.6.1.1}%
\contentsline {section}{\numberline {2}Three-Address Code}{43}{section.0.6.2}%
\contentsline {subsection}{\numberline {2.1}Addresses and Instructions}{43}{subsection.0.6.2.1}%
\contentsline {subsection}{\numberline {2.2}Quadruples}{43}{subsection.0.6.2.2}%
\contentsline {subsection}{\numberline {2.3}Triples}{43}{subsection.0.6.2.3}%
\contentsline {subsection}{\numberline {2.4}Static Single-Assignment Form}{43}{subsection.0.6.2.4}%
\contentsline {section}{\numberline {3}Types and Declarations}{44}{section.0.6.3}%
\contentsline {subsection}{\numberline {3.1}Type Expressions}{44}{subsection.0.6.3.1}%
\contentsline {subsection}{\numberline {3.2}Type Equivalence}{44}{subsection.0.6.3.2}%
\contentsline {subsection}{\numberline {3.3}Storage Layout for Local Names}{45}{subsection.0.6.3.3}%
\contentsline {section}{\numberline {4}Translation of Expressions}{45}{section.0.6.4}%
\contentsline {subsection}{\numberline {4.1}Addressing Array Elements}{45}{subsection.0.6.4.1}%
\contentsline {section}{\numberline {5}Type Checking}{45}{section.0.6.5}%
\contentsline {subsection}{\numberline {5.1}Rules for Type Checking}{45}{subsection.0.6.5.1}%
\contentsline {subsection}{\numberline {5.2}Type Conversions}{45}{subsection.0.6.5.2}%
\contentsline {subsection}{\numberline {5.3}Overloading of Functions and Operators}{46}{subsection.0.6.5.3}%
\contentsline {subsection}{\numberline {5.4}Type Inference and Polymorphic Functions}{46}{subsection.0.6.5.4}%
\contentsline {subsection}{\numberline {5.5}An Algorithm for Unification}{47}{subsection.0.6.5.5}%
\contentsline {section}{\numberline {6}Control Flow}{48}{section.0.6.6}%
\contentsline {subsection}{\numberline {6.1}Short-Circuit Code}{48}{subsection.0.6.6.1}%
\contentsline {subsection}{\numberline {6.2}Boolean Values and Jumping Code}{48}{subsection.0.6.6.2}%
\contentsline {section}{\numberline {7}Backpatching}{49}{section.0.6.7}%
\contentsfinish 
